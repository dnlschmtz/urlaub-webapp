/* generated by Svelte v3.42.3 */
import {
	SvelteComponent,
	append_styles,
	attr,
	children,
	claim_element,
	detach,
	element,
	init,
	insert_hydration,
	noop,
	safe_not_equal
} from "https://cdn.skypack.dev/svelte@3.44.1/internal";

function add_css(target) {
	append_styles(target, "svelte-360fia", ".map.svelte-360fia{width:100%;height:420px}");
}

function create_fragment(ctx) {
	let div;

	return {
		c() {
			div = element("div");
			this.h();
		},
		l(nodes) {
			div = claim_element(nodes, "DIV", { class: true, id: true });
			children(div).forEach(detach);
			this.h();
		},
		h() {
			attr(div, "class", "map svelte-360fia");
			attr(div, "id", "map");
		},
		m(target, anchor) {
			insert_hydration(target, div, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const initialView = [49.4887, 8.4658];
	let webSocket, groupId;
	let popupContent;
	let map, curX, curY;

	function create(webSock, id) {
		groupId = id;
		webSocket = webSock;
		map = L.map("map").setView(initialView, 4);

		L.tileLayer("https://a.tile.openstreetmap.org/{z}/{x}/{y}.png ", {
			attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
			maxZoom: 18
		}).addTo(map);
	}

	function setTargets(targets) {
		targets.forEach(element => {
			let marker = L.marker([element.x, element.y]).addTo(map);
			marker.bindPopup(element.name + " - " + element.votes + " Stimmen");
		});

		let popup = L.popup();

		function onMapClick(e) {
			let coords = e.latlng.toString().split(",");
			curX = parseFloat(coords[0].replace("LatLng(", ""), 10);
			curY = parseFloat(coords[1].replace(")", ""), 10);
			popupContent = L.DomUtil.create("div", "myPopup"); // Haben hier leider keine andere Lösung gefunden
			popupContent.innerHTML = '<input type="text" placeholder="Name" style="display: block;" id="add-name"></input><a id="add-submit" style="display: block; text-align: center;">Hinzufügen</a>';
			popup.setLatLng(e.latlng).setContent(popupContent).openOn(map);

			popupContent.querySelector("#add-submit").onclick = e => {
				map.closePopup();
				addTarget();
			};
		}

		map.on("click", onMapClick);
	}

	function addTarget() {
		let marker = L.marker([curX, curY]).addTo(map);
		let name = popupContent.querySelector("#add-name").value;
		marker.bindPopup(name + " - " + "0" + " Stimmen");
		webSocket.send("update-targets " + groupId + " " + name + " " + curX + " " + curY);
	}

	return [create, setTargets];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { create: 0, setTargets: 1 }, add_css);
	}

	get create() {
		return this.$$.ctx[0];
	}

	get setTargets() {
		return this.$$.ctx[1];
	}
}

export default Component;